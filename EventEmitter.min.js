/**
 * EventEmitter v4.0.4 - git.io/ee
 * Oliver Caldwell
 * MIT license
 * @preserve
 */
(function(exports){"use strict";function EventEmitter(){}var proto=EventEmitter.prototype,nativeIndexOf=Array.prototype.indexOf?true:false;function indexOfListener(listener,listeners){if(nativeIndexOf){return listeners.indexOf(listener)}var i=listeners.length;while(i--){if(listeners[i]===listener){return i}}return-1}proto._getEvents=function(){return this._events||(this._events={})};proto.getListeners=function(evt){var events=this._getEvents();return events[evt]||(events[evt]=[])};proto.addListener=function(evt,listener){var listeners=this.getListeners(evt);if(indexOfListener(listener,listeners)===-1){listeners.push(listener)}return this};proto.on=proto.addListener;proto.removeListener=function(evt,listener){var listeners=this.getListeners(evt),index=indexOfListener(listener,listeners);if(index!==-1){listeners.splice(index,1);if(listeners.length===0){this.removeEvent(evt)}}return this};proto.off=proto.removeListener;proto.addListeners=function(evt,listeners){return this.manipulateListeners(false,evt,listeners)};proto.removeListeners=function(evt,listeners){return this.manipulateListeners(true,evt,listeners)};proto.manipulateListeners=function(remove,evt,listeners){var i,value,single=remove?this.removeListener:this.addListener,multiple=remove?this.removeListeners:this.addListeners;if(typeof evt==="object"){for(i in evt){if(evt.hasOwnProperty(i)&&(value=evt[i])){if(typeof value==="function"){single.call(this,i,value)}else{multiple.call(this,i,value)}}}}else{i=listeners.length;while(i--){single.call(this,evt,listeners[i])}}return this};proto.removeEvent=function(evt){if(evt){delete this._getEvents()[evt]}else{delete this._events}return this};proto.emitEvent=function(evt,args){var listeners=this.getListeners(evt),i=listeners.length,response;while(i--){response=args?listeners[i].apply(null,args):listeners[i]();if(response===true){this.removeListener(evt,listeners[i])}}return this};proto.trigger=proto.emitEvent;if(typeof define==="function"&&define.amd){define(function(){return EventEmitter})}else{exports.EventEmitter=EventEmitter}})(this);